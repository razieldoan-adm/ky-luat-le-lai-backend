
const Setting = require('../models/Setting');

// ‚úÖ Ghi nh·∫≠n l·ªói
export const createRecord = async (req, res) => {
  try {
    const data = {
      ...req.body,
      date: req.body.date ? new Date(req.body.date) : new Date(), // ‚úÖ T·ª± g√°n ng√†y h·ªá th·ªëng
      scoreChange: req.body.scoreChange ?? 10, // ‚úÖ M·∫∑c ƒë·ªãnh 10 ƒëi·ªÉm
    };

    console.log("üì• D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", data);

    const record = new ClassLineUpSummary(data);
    await record.save();

    res.status(201).json(record);
  } catch (err) {
    console.error("‚ùå L·ªói ghi nh·∫≠n:", err);
    res.status(500).json({
      message: "Kh√¥ng th·ªÉ ghi nh·∫≠n vi ph·∫°m",
      error: err.message,
    });
  }
};

// ‚úÖ L·∫•y danh s√°ch vi ph·∫°m trong tu·∫ßn hi·ªán t·∫°i
const getWeeklySummary = async (req, res) => {
  try {
    const today = new Date();
    const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + 1)); // Th·ª© 2
    const lastDayOfWeek = new Date(today.setDate(firstDayOfWeek.getDate() + 6)); // CN

    const records = await ClassLineUpSummary.find({
      date: { $gte: firstDayOfWeek, $lte: lastDayOfWeek },
    }).sort({ date: -1 });

    res.json(records);
  } catch (err) {
    console.error("L·ªói khi l·∫•y d·ªØ li·ªáu tu·∫ßn:", err);
    res.status(500).json({ message: "Kh√¥ng th·ªÉ t·∫£i danh s√°ch vi ph·∫°m tu·∫ßn" });
  }
};

// ‚úÖ X√≥a vi ph·∫°m (tr·ª´ ƒëi·ªÉm)
const deleteRecord = async (req, res) => {
  try {
    const record = await ClassLineUpSummary.findByIdAndDelete(req.params.id);
    if (!record) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y vi ph·∫°m" });
    res.json({ message: "ƒê√£ x√≥a vi ph·∫°m", deleted: record });
  } catch (err) {
    console.error("L·ªói khi x√≥a:", err);
    res.status(500).json({ message: "Kh√¥ng th·ªÉ x√≥a vi ph·∫°m" });
  }
};

module.exports = {
  createRecord,
  getWeeklySummary,
  deleteRecord,
};
